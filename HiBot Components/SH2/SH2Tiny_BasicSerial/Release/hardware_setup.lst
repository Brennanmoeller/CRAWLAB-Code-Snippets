   1              		.file	"hardware_setup.c"
   2              		.text
   3              		.text
   4              	.Ltext0:
   5              		.cfi_sections	.debug_frame
   6              		.align 1
   7              		.align 4
   8              		.global	_HardwareSetup
  10              	_HardwareSetup:
  11              	.LFB0:
  12              		.file 1 "../src/hardware_setup.c"
   1:../src/hardware_setup.c **** /***********************************************************************/
   2:../src/hardware_setup.c **** /*  													               */
   3:../src/hardware_setup.c **** /*      PROJECT NAME :  SH2Tiny_Sample1EclipseV3                       */
   4:../src/hardware_setup.c **** /*      FILE         :  hardware_setup.c                               */
   5:../src/hardware_setup.c **** /*      DESCRIPTION  :  Hardware Initialization                        */
   6:../src/hardware_setup.c **** /*      CPU SERIES   :  SH2                                            */
   7:../src/hardware_setup.c **** /*      CPU TYPE     :  SH7047                                         */
   8:../src/hardware_setup.c **** /*  													               */
   9:../src/hardware_setup.c **** /*      This file is generated by KPIT Eclipse.                        */
  10:../src/hardware_setup.c **** /*  													               */
  11:../src/hardware_setup.c **** /***********************************************************************/                          
  12:../src/hardware_setup.c **** 
  13:../src/hardware_setup.c **** 
  14:../src/hardware_setup.c **** 
  15:../src/hardware_setup.c **** 
  16:../src/hardware_setup.c **** #include "iodefine.h"
  17:../src/hardware_setup.c **** #include "boot.h"
  18:../src/hardware_setup.c **** 
  19:../src/hardware_setup.c **** #ifdef __cplusplus
  20:../src/hardware_setup.c **** extern "C" {
  21:../src/hardware_setup.c **** #endif
  22:../src/hardware_setup.c **** extern void HardwareSetup(void);
  23:../src/hardware_setup.c **** #ifdef __cplusplus
  24:../src/hardware_setup.c **** }
  25:../src/hardware_setup.c **** #endif
  26:../src/hardware_setup.c **** 
  27:../src/hardware_setup.c **** void set_imask( int );
  28:../src/hardware_setup.c **** 
  29:../src/hardware_setup.c **** void HardwareSetup(void)
  30:../src/hardware_setup.c **** {
  13              		.loc 1 30 0
  14              		.cfi_startproc
  15              	.LVL0:
  16              	.LBB4:
  17              	.LBB5:
  31:../src/hardware_setup.c **** 	set_imask(0x0);  // set interrupt mask priority level to 0
  32:../src/hardware_setup.c **** 
  33:../src/hardware_setup.c **** 	// TODO: add hardware initialization code here
  34:../src/hardware_setup.c **** 
  35:../src/hardware_setup.c **** 	//NB: For this particular sample code only the necessary ports
  36:../src/hardware_setup.c **** 	//have been set. Please refer to the SH27047 Renesas Hardware
  37:../src/hardware_setup.c **** 	//manual for details and for other registers and modules settings
  38:../src/hardware_setup.c **** 	MST.CR2.BIT._HCAN2=0; //Clear the stand by mode for the HCAN module
  39:../src/hardware_setup.c **** 	MST.CR2.BIT._AD0=0;	//Clear the stand by mode for AD converter 0
  40:../src/hardware_setup.c **** 	MST.CR2.BIT._AD1=0; //Clear the stand by mode for AD converter 1
  41:../src/hardware_setup.c **** 	MST.CR2.BIT._MMT=0; //Clear the stand by mode for the MMT module
  42:../src/hardware_setup.c **** 	MST.CR2.BIT._MTU=0; //Clear the stand by mode for the MTU module
  43:../src/hardware_setup.c **** 	MST.CR1.BIT._SCI3=0; //Clear the stand by mode for the SCI3 module
  44:../src/hardware_setup.c **** 
  45:../src/hardware_setup.c **** 
  46:../src/hardware_setup.c **** 	//PORT A settings (includes the ENC port)
  47:../src/hardware_setup.c **** 	PFC.PACRL1.WORD = 0x0005;	/*	0000 0000 0000 0101	*/
  48:../src/hardware_setup.c **** 	PFC.PACRL2.WORD = 0x5a80;	/*  0101 1010 1000 0000 */
  49:../src/hardware_setup.c **** 	PFC.PACRL3.WORD = 0x0038;	/*	0000 0000 0011 1000 */
  50:../src/hardware_setup.c **** 	PFC.PAIORL.WORD = 0xfc16;	/*	1111 1100 0001 0110	*/
  51:../src/hardware_setup.c **** 
  52:../src/hardware_setup.c **** 	//PORT B SETTINGS
  53:../src/hardware_setup.c **** 	PFC.PBCR1.WORD = 0x0C00;	/* 0000 1100 0000 0000 */
  54:../src/hardware_setup.c **** 	PFC.PBCR2.WORD = 0x0DFF;	/* 0000 1101 1111 1111 */
  55:../src/hardware_setup.c **** 	PFC.PBIOR.WORD = 0x0009;	/* 0000 0000 0000 1001 */
  56:../src/hardware_setup.c **** 
  57:../src/hardware_setup.c **** 	//PORT D SETTINGS
  58:../src/hardware_setup.c **** 	PFC.PDCRL1.WORD = 0x0000;
  59:../src/hardware_setup.c **** 	PFC.PDCRL2.WORD = 0x0000;
  60:../src/hardware_setup.c **** 	PFC.PDIORL.WORD = 0x01ff;
  61:../src/hardware_setup.c **** 
  62:../src/hardware_setup.c **** 	// PWM and LEDs pin settings
  63:../src/hardware_setup.c **** 	PFC.PECRL1.WORD = 0x0000; // first of all set them to zero (general I/O)
  64:../src/hardware_setup.c **** 	PFC.PECRL2.WORD = 0x0000;
  65:../src/hardware_setup.c **** 	PFC.PECRH.WORD = 0x0000;
  66:../src/hardware_setup.c **** 	PFC.PEIORH.WORD = 0x003F; // set the pins PE21-PE16 as outputs
  67:../src/hardware_setup.c **** 	PFC.PEIORL.WORD = 0xFFFF; // set the pins PE15-PE0 as outputs
  68:../src/hardware_setup.c **** }
  69:../src/hardware_setup.c **** 
  70:../src/hardware_setup.c **** 
  71:../src/hardware_setup.c **** /************************************/
  72:../src/hardware_setup.c **** /*	Interrupt mask level	    */
  73:../src/hardware_setup.c **** /************************************/
  74:../src/hardware_setup.c **** void set_imask( int imask )
  75:../src/hardware_setup.c **** {
  76:../src/hardware_setup.c ****   int		srreg;
  77:../src/hardware_setup.c **** 
  78:../src/hardware_setup.c ****   imask <<= 4;
  79:../src/hardware_setup.c ****   imask &= 0x00f0;
  80:../src/hardware_setup.c ****   asm("	stc	sr,%0	":"=r"(srreg):);
  81:../src/hardware_setup.c ****   srreg &= 0xffffff0f;
  18              		.loc 1 81 0
  19 0000 924E     		mov.w	.L2,r2
  80:../src/hardware_setup.c ****   asm("	stc	sr,%0	":"=r"(srreg):);
  20              		.loc 1 80 0
  21              	! 80 "../src/hardware_setup.c" 1
  22 0002 0102     			stc	sr,r1	
  23              	! 0 "" 2
  24              	.LVL1:
  25              		.loc 1 81 0
  26 0004 2129     		and	r2,r1
  27              	.LVL2:
  82:../src/hardware_setup.c ****   srreg = srreg | imask;
  83:../src/hardware_setup.c ****   asm("	ldc	%0,sr "::"r"(srreg));
  28              		.loc 1 83 0
  29              	! 83 "../src/hardware_setup.c" 1
  30 0006 410E     			ldc	r1,sr 
  31              	! 0 "" 2
  32              	.LBE5:
  33              	.LBE4:
  38:../src/hardware_setup.c **** 	MST.CR2.BIT._HCAN2=0; //Clear the stand by mode for the HCAN module
  34              		.loc 1 38 0
  35 0008 934B     		mov.w	.L3,r3
  36 000a E2FD     		mov	#-3,r2
  37 000c 6133     		mov	r3,r1
  38 000e 7102     		add	#2,r1
  39 0010 6710     		mov.b	@r1,r7
  40 0012 2279     		and	r7,r2
  41 0014 2120     		mov.b	r2,@r1
  39:../src/hardware_setup.c **** 	MST.CR2.BIT._AD0=0;	//Clear the stand by mode for AD converter 0
  42              		.loc 1 39 0
  43 0016 6233     		mov	r3,r2
  44 0018 7203     		add	#3,r2
  45 001a 6620     		mov.b	@r2,r6
  46 001c E7EF     		mov	#-17,r7
  47 001e 2769     		and	r6,r7
  48 0020 2270     		mov.b	r7,@r2
  40:../src/hardware_setup.c **** 	MST.CR2.BIT._AD1=0; //Clear the stand by mode for AD converter 1
  49              		.loc 1 40 0
  50 0022 E7DF     		mov	#-33,r7
  51 0024 6620     		mov.b	@r2,r6
  43:../src/hardware_setup.c **** 	MST.CR1.BIT._SCI3=0; //Clear the stand by mode for the SCI3 module
  52              		.loc 1 43 0
  53 0026 7301     		add	#1,r3
  40:../src/hardware_setup.c **** 	MST.CR2.BIT._AD1=0; //Clear the stand by mode for AD converter 1
  54              		.loc 1 40 0
  55 0028 2679     		and	r7,r6
  56 002a 2260     		mov.b	r6,@r2
  41:../src/hardware_setup.c **** 	MST.CR2.BIT._MMT=0; //Clear the stand by mode for the MMT module
  57              		.loc 1 41 0
  58 002c E2BF     		mov	#-65,r2
  59 002e 6610     		mov.b	@r1,r6
  60 0030 2269     		and	r6,r2
  61 0032 2120     		mov.b	r2,@r1
  42:../src/hardware_setup.c **** 	MST.CR2.BIT._MTU=0; //Clear the stand by mode for the MTU module
  62              		.loc 1 42 0
  63 0034 6210     		mov.b	@r1,r2
  64 0036 2729     		and	r2,r7
  65 0038 2170     		mov.b	r7,@r1
  43:../src/hardware_setup.c **** 	MST.CR1.BIT._SCI3=0; //Clear the stand by mode for the SCI3 module
  66              		.loc 1 43 0
  67 003a E1F7     		mov	#-9,r1
  68 003c 6230     		mov.b	@r3,r2
  69 003e 2129     		and	r2,r1
  70 0040 2310     		mov.b	r1,@r3
  47:../src/hardware_setup.c **** 	PFC.PACRL1.WORD = 0x0005;	/*	0000 0000 0000 0101	*/
  71              		.loc 1 47 0
  72 0042 E305     		mov	#5,r3
  73 0044 912E     		mov.w	.L4,r1
  60:../src/hardware_setup.c **** 	PFC.PDIORL.WORD = 0x01ff;
  74              		.loc 1 60 0
  75 0046 972E     		mov.w	.L5,r7
  47:../src/hardware_setup.c **** 	PFC.PACRL1.WORD = 0x0005;	/*	0000 0000 0000 0101	*/
  76              		.loc 1 47 0
  77 0048 6213     		mov	r1,r2
  78 004a 7206     		add	#6,r2
  79 004c 2231     		mov.w	r3,@r2
  48:../src/hardware_setup.c **** 	PFC.PACRL2.WORD = 0x5a80;	/*  0101 1010 1000 0000 */
  80              		.loc 1 48 0
  81 004e 7202     		add	#2,r2
  82 0050 932A     		mov.w	.L6,r3
  83 0052 2231     		mov.w	r3,@r2
  49:../src/hardware_setup.c **** 	PFC.PACRL3.WORD = 0x0038;	/*	0000 0000 0011 1000 */
  84              		.loc 1 49 0
  85 0054 72FC     		add	#-4,r2
  86 0056 E338     		mov	#56,r3
  87 0058 2231     		mov.w	r3,@r2
  50:../src/hardware_setup.c **** 	PFC.PAIORL.WORD = 0xfc16;	/*	1111 1100 0001 0110	*/
  88              		.loc 1 50 0
  89 005a 9226     		mov.w	.L7,r2
  53:../src/hardware_setup.c **** 	PFC.PBCR1.WORD = 0x0C00;	/* 0000 1100 0000 0000 */
  90              		.loc 1 53 0
  91 005c 9326     		mov.w	.L8,r3
  50:../src/hardware_setup.c **** 	PFC.PAIORL.WORD = 0xfc16;	/*	1111 1100 0001 0110	*/
  92              		.loc 1 50 0
  93 005e 2121     		mov.w	r2,@r1
  53:../src/hardware_setup.c **** 	PFC.PBCR1.WORD = 0x0C00;	/* 0000 1100 0000 0000 */
  94              		.loc 1 53 0
  95 0060 6213     		mov	r1,r2
  96 0062 7212     		add	#18,r2
  97 0064 2231     		mov.w	r3,@r2
  54:../src/hardware_setup.c **** 	PFC.PBCR2.WORD = 0x0DFF;	/* 0000 1101 1111 1111 */
  98              		.loc 1 54 0
  99 0066 7202     		add	#2,r2
 100 0068 9321     		mov.w	.L9,r3
 101 006a 2231     		mov.w	r3,@r2
  55:../src/hardware_setup.c **** 	PFC.PBIOR.WORD = 0x0009;	/* 0000 0000 0000 1001 */
 102              		.loc 1 55 0
 103 006c 72FA     		add	#-6,r2
 104 006e E309     		mov	#9,r3
 105 0070 2231     		mov.w	r3,@r2
  58:../src/hardware_setup.c **** 	PFC.PDCRL1.WORD = 0x0000;
 106              		.loc 1 58 0
 107 0072 6313     		mov	r1,r3
 108 0074 E200     		mov	#0,r2
 109 0076 7326     		add	#38,r3
 110 0078 2321     		mov.w	r2,@r3
  59:../src/hardware_setup.c **** 	PFC.PDCRL2.WORD = 0x0000;
 111              		.loc 1 59 0
 112 007a 7302     		add	#2,r3
 113 007c 2321     		mov.w	r2,@r3
  60:../src/hardware_setup.c **** 	PFC.PDIORL.WORD = 0x01ff;
 114              		.loc 1 60 0
 115 007e 73F8     		add	#-8,r3
 116 0080 2371     		mov.w	r7,@r3
  63:../src/hardware_setup.c **** 	PFC.PECRL1.WORD = 0x0000; // first of all set them to zero (general I/O)
 117              		.loc 1 63 0
 118 0082 7312     		add	#18,r3
 119 0084 2321     		mov.w	r2,@r3
  64:../src/hardware_setup.c **** 	PFC.PECRL2.WORD = 0x0000;
 120              		.loc 1 64 0
 121 0086 7302     		add	#2,r3
 122 0088 2321     		mov.w	r2,@r3
  65:../src/hardware_setup.c **** 	PFC.PECRH.WORD = 0x0000;
 123              		.loc 1 65 0
 124 008a 7302     		add	#2,r3
 125 008c 2321     		mov.w	r2,@r3
  66:../src/hardware_setup.c **** 	PFC.PEIORH.WORD = 0x003F; // set the pins PE21-PE16 as outputs
 126              		.loc 1 66 0
 127 008e 6213     		mov	r1,r2
 128 0090 7230     		add	#48,r2
 129 0092 E33F     		mov	#63,r3
 130 0094 2231     		mov.w	r3,@r2
  67:../src/hardware_setup.c **** 	PFC.PEIORL.WORD = 0xFFFF; // set the pins PE15-PE0 as outputs
 131              		.loc 1 67 0
 132 0096 712E     		add	#46,r1
 133 0098 E2FF     		mov	#-1,r2
 134 009a 2121     		mov.w	r2,@r1
  68:../src/hardware_setup.c **** }
 135              		.loc 1 68 0
 136 009c 000B     		rts	
 137 009e 0009     		nop
 138              		.align 1
 139              	.L2:
 140 00a0 FF0F     		.short	-241
 141              	.L3:
 142 00a2 861C     		.short	-31204
 143              	.L4:
 144 00a4 8386     		.short	-31866
 145              	.L5:
 146 00a6 01FF     		.short	511
 147              	.L6:
 148 00a8 5A80     		.short	23168
 149              	.L7:
 150 00aa FC16     		.short	-1002
 151              	.L8:
 152 00ac 0C00     		.short	3072
 153              	.L9:
 154 00ae 0DFF     		.short	3583
 155              		.cfi_endproc
 156              	.LFE0:
 158              		.align 1
 159              		.align 4
 160              		.global	_set_imask
 162              	_set_imask:
 163              	.LFB1:
  75:../src/hardware_setup.c **** {
 164              		.loc 1 75 0
 165              		.cfi_startproc
 166              	.LVL3:
  78:../src/hardware_setup.c ****   imask <<= 4;
 167              		.loc 1 78 0
 168 00b0 6043     		mov	r4,r0
  81:../src/hardware_setup.c ****   srreg &= 0xffffff0f;
 169              		.loc 1 81 0
 170 00b2 9208     		mov.w	.L11,r2
  78:../src/hardware_setup.c ****   imask <<= 4;
 171              		.loc 1 78 0
 172 00b4 4008     		shll2	r0
 173 00b6 4008     		shll2	r0
 174              	.LVL4:
  79:../src/hardware_setup.c ****   imask &= 0x00f0;
 175              		.loc 1 79 0
 176 00b8 C9F0     		and	#240,r0
 177              	.LVL5:
  80:../src/hardware_setup.c ****   asm("	stc	sr,%0	":"=r"(srreg):);
 178              		.loc 1 80 0
 179              	! 80 "../src/hardware_setup.c" 1
 180 00ba 0102     			stc	sr,r1	
 181              	! 0 "" 2
 182              	.LVL6:
  81:../src/hardware_setup.c ****   srreg &= 0xffffff0f;
 183              		.loc 1 81 0
 184 00bc 2129     		and	r2,r1
 185              	.LVL7:
  82:../src/hardware_setup.c ****   srreg = srreg | imask;
 186              		.loc 1 82 0
 187 00be 210B     		or	r0,r1
 188              		.loc 1 83 0
 189              	! 83 "../src/hardware_setup.c" 1
 190 00c0 410E     			ldc	r1,sr 
 191              	! 0 "" 2
  84:../src/hardware_setup.c **** }
 192              		.loc 1 84 0
 193 00c2 000B     		rts	
 194 00c4 0009     		nop
 195              		.align 1
 196              	.L11:
 197 00c6 FF0F     		.short	-241
 198              		.cfi_endproc
 199              	.LFE1:
 201              	.Letext0:
 202              		.file 2 "../src/iodefine.h"
 203              		.file 3 "../src/boot.h"
